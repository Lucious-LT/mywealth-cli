/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * A JSON blob representing a fund contract note.
 */
export type FundTransactionContract = {
    /**
     * The unique ID for the record. This is the ID that is used in all services and related records when referencing the record.
     */
    id: string;
    /**
     * The ID of the user that created the record.
     */
    createdBy: string;
    /**
     * Indicates when the record was created.
     */
    createdAt: string;
    /**
     * The ID of the user that last modified the record.
     */
    updatedBy: string;
    /**
     * Indicates when the record was last modified.
     */
    updatedAt: string;
    /**
     * Indicates if this is a deleted record
     */
    deleted: boolean;
    /**
     * An idempotency key
     */
    idempotencyKey?: string;
    /**
     * A unique identifier for the client that is generated by the crm service.
     */
    clientId: string;
    /**
     * A unique client code that is generated by the crm service
     */
    clientCode: string;
    /**
     * A label that describes the client
     */
    clientLabel: string;
    /**
     * The investing account code used for executing and settling trades for the client.
     */
    investingAccountNo?: string;
    /**
     * The investing sub account code used for executing and settling trades for the client.
     */
    investingSubAccountNo?: string;
    /**
     * A label that describes the portfolio.
     */
    accountLabel: string;
    /**
     * A unique portfolio code that is generated by the investing service. This is required if the accountId is not provided.
     */
    accountNo: string;
    /**
     * A unique identifier for the portfolio that is generated by the investing service.
     */
    accountId: string;
    /**
     * The status of the contract
     */
    status: FundTransactionContract.status;
    /**
     * A unique identifier for the order that is generated by the investing service.
     */
    orderId: string;
    /**
     * A unique order number that is generated by the investing service.
     */
    orderNo: string;
    /**
     * Indicates the order type ie SUBSCRIPTION  | REDEMPTION.
     */
    orderType: FundTransactionContract.orderType;
    /**
     * A label that describes the order
     */
    orderDesc: string;
    /**
     * A unique contract number that is generated by the investing service.
     */
    contractNo: string;
    /**
     * The market where the fund was traded
     */
    marketCode: string;
    /**
     * The ID of the security traded.
     */
    secId: string;
    /**
     * The type of fund
     */
    fundType?: FundTransactionContract.fundType;
    /**
     * The quantity filled
     */
    contractQty: number;
    /**
     * The contract price for the trade
     */
    contractPrice: number;
    /**
     * The total consideration
     */
    consideration: number;
    /**
     * The contract fees
     */
    fees: number;
    /**
     * The penalty charged if applicable
     */
    penalty: number;
    /**
     * The contract commission
     */
    commission: number;
    /**
     * The contract total
     */
    contractTotal: number;
    /**
     * The contract currency
     */
    currency?: string;
    /**
     * The transaction date
     */
    transactionDate: string;
    /**
     * The settlement date
     */
    settlementDate: string;
    /**
     * The accounting journal ID used for posting the contract note.
     */
    contractJournalId?: string;
    /**
     * The accounting journal ID used for settling the trade.
     */
    settlementJournalId?: string;
    /**
     * The position ledger ID used for tracking the asset.
     */
    positionLedgerId?: string;
    /**
     * The ID for the dividend distribution in the funds service. This is populated when a full redemption is done before scheduled dividend distribution
     */
    dividendDistributionId?: string;
    /**
     * The custodian Id if involved in the transaction
     */
    custodianId?: string;
    /**
     * The agent Id if involved in the transaction
     */
    agentId?: string;
};

export namespace FundTransactionContract {

    /**
     * The status of the contract
     */
    export enum status {
        PENDING = 'PENDING',
        POSTED = 'POSTED',
        REVERSED = 'REVERSED',
    }

    /**
     * Indicates the order type ie SUBSCRIPTION  | REDEMPTION.
     */
    export enum orderType {
        SUBSCRIPTION = 'SUBSCRIPTION',
        REDEMPTION = 'REDEMPTION',
    }

    /**
     * The type of fund
     */
    export enum fundType {
        EQUITY = 'EQUITY',
        MONEY_MARKET = 'MONEY_MARKET',
        BOND = 'BOND',
        REAL_ESTATE = 'REAL_ESTATE',
        BALANCED = 'BALANCED',
        EXCHANGE_TRADED = 'EXCHANGE_TRADED',
        ETHICAL = 'ETHICAL',
        SECTOR = 'SECTOR',
        UMBRELLA = 'UMBRELLA',
    }


}

