/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * A JSON blob representing a leg in a new order request. The fields marked with an * means that they are required.
 */
export type OrderLegRequest = {
    /**
     * A unique account code that is generated by the investing service. This is required if the accountId is not provided.
     */
    accountCode?: string;
    /**
     * A unique identifier for the account that is generated by the investing service. This is required if the accountCode is not provided.
     */
    accountId?: string;
    /**
     * Indicates the order side ie BUY  | SELL.
     */
    side: OrderLegRequest.side;
    /**
     * Indicates how long the order should be valid for.
     */
    tif: OrderLegRequest.tif;
    /**
     * The ID for the security to be traded.
     */
    secId: string;
    /**
     * The quantity requested. This is validated using the security master instrument definition.
     */
    requestedQty: number;
    /**
     * A limit price if you want the order to execute as a LIMIT order. If not provided the order is routed as a market order.
     */
    limitPrice?: number;
    /**
     * Required if a limit price is specified and must match the currency configured in the instrument definition.
     */
    currency?: string;
    /**
     * The asset type for the order
     */
    assetType: OrderLegRequest.assetType;
};

export namespace OrderLegRequest {

    /**
     * Indicates the order side ie BUY  | SELL.
     */
    export enum side {
        BUY = 'BUY',
        SELL = 'SELL',
    }

    /**
     * Indicates how long the order should be valid for.
     */
    export enum tif {
        DAY = 'DAY',
        GOOD_TILL_DATE = 'GOOD_TILL_DATE',
        GOOD_TILL_CANCELLED = 'GOOD_TILL_CANCELLED',
    }

    /**
     * The asset type for the order
     */
    export enum assetType {
        EQUITY = 'EQUITY',
        BOND = 'BOND',
        OPTION = 'OPTION',
        FUTURE = 'FUTURE',
    }


}

