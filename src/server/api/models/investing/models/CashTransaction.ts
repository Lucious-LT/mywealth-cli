/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

/**
 * A JSON blob representing a cash transaction. The fields marked with an * means that they are required.
 */
export type CashTransaction = {
    /**
     * The unique ID for the record. This is the ID that is used in all services and related records when referencing the record.
     */
    id: string;
    /**
     * The ID of the user that created the record.
     */
    createdBy: string;
    /**
     * Indicates when the record was created.
     */
    createdAt: string;
    /**
     * The ID of the user that last modified the record.
     */
    updatedBy: string;
    /**
     * Indicates when the record was last modified.
     */
    updatedAt: string;
    /**
     * Indicates if this is a deleted record
     */
    deleted: boolean;
    /**
     * The journal ID used to process the payment.
     */
    journalId?: string;
    /**
     * The idempotency key for the request.
     * If a request is sent with an existing key, the existing record will be returned.
     *
     */
    idemPotencyId?: string;
    /**
     * A unique identifier for the branch that processed this transaction.
     */
    branchId: string;
    /**
     * A unique identifier for the client that is generated by the crm service and is populated by the investing service while validating the transaction.
     */
    clientId: string;
    /**
     * A unique client code that is generated by the crm service and is populated by the investing service while validating an order.
     */
    clientCode: string;
    /**
     * A label that describes the client and is populated by the investing service while validating an order.
     */
    clientLabel: string;
    /**
     * Indicates the type of transaction ie DEPOSIT | PAYMENT | TRANSFER.
     */
    type: CashTransaction.type;
    /**
     * Indicates the channel of transaction ie CASH | CHEQUE | ELECTRONIC.
     */
    channel: CashTransaction.channel;
    /**
     * The current status of the transaction.
     */
    status?: CashTransaction.status;
    /**
     * A reference that describes the transaction
     */
    reference: string;
    /**
     * Notes on the transaction
     */
    notes?: string;
    /**
     * A unique transaction number that is generated by the system.
     */
    transNo: string;
    /**
     * A label that describes the order
     */
    transDesc: string;
    /**
     * The transaction date
     */
    transDate: string;
    /**
     * The value date
     */
    valueDate: string;
    /**
     * The transaction currency
     */
    currency: string;
    /**
     * The transaction amount.
     */
    amount: number;
    /**
     * The processing fee.
     */
    processingFee: number;
    /**
     * The destination account type for a transfer ie INVEST | BANK | INSURANCE | LOAN.
     */
    destAccountType?: CashTransaction.destAccountType;
    /**
     * An optional label that describes the destination account
     */
    destAccountLabel?: string;
    /**
     * An optional unique account code for the destination account
     */
    destAccountNo?: string;
    /**
     * An optional unique identifier for the destination account
     */
    destAccountId?: string;
    /**
     * An optional unique identifier for the destination account GL
     */
    destGlAccountId?: string;
    /**
     * An optional currency code for the destination account
     */
    destAccountCurrency?: string;
    /**
     * Indicates if the transaction should be automatically approved
     */
    autoApprove: boolean;
    /**
     * A unique investment account code that is generated by the investing service.
     */
    accountNo: string;
    /**
     * A unique identifier for the investment account ID that is generated by the investing service.
     */
    accountId: string;
    /**
     * A label that describes the investment account and is populated by the investing service when validating a transaction.
     */
    accountLabel: string;
};

export namespace CashTransaction {

    /**
     * Indicates the type of transaction ie DEPOSIT | PAYMENT | TRANSFER.
     */
    export enum type {
        DEPOSIT = 'DEPOSIT',
        PAYMENT = 'PAYMENT',
        TRANSFER = 'TRANSFER',
    }

    /**
     * Indicates the channel of transaction ie CASH | CHEQUE | ELECTRONIC.
     */
    export enum channel {
        CASH = 'CASH',
        CHEQUE = 'CHEQUE',
        ELECTRONIC = 'ELECTRONIC',
    }

    /**
     * The current status of the transaction.
     */
    export enum status {
        PENDING = 'PENDING',
        APPROVED = 'APPROVED',
        POSTED = 'POSTED',
        REVERSED = 'REVERSED',
        CANCELED = 'CANCELED',
    }

    /**
     * The destination account type for a transfer ie INVEST | BANK | INSURANCE | LOAN.
     */
    export enum destAccountType {
        INVEST = 'INVEST',
        DEPOSIT = 'DEPOSIT',
        INSURANCE = 'INSURANCE',
        LOAN = 'LOAN',
        NA = 'NA',
        AGENT = 'AGENT',
        CUSTODIAN = 'CUSTODIAN',
    }


}

